#!/usr/bin/env bash
set -eo pipefail; [[ $DOKKU_TRACE ]] && set -x

PLUGIN_BASE_PATH="$PLUGIN_PATH"
if [[ -n $DOKKU_API_VERSION ]]; then
  PLUGIN_BASE_PATH="$PLUGIN_ENABLED_PATH"
fi
source "$PLUGIN_BASE_PATH/common/functions"

is_webhook() {
  echo "$1" | grep -E '^http[s]?://'
}

get_sentry_root() {
  if [[ -z $(is_webhook "$1") ]]; then
    verify_app_name "$1"
    APP="$1"
    echo "$DOKKU_ROOT/$APP"
  else
    echo "$DOKKU_ROOT"
  fi
}

get_webhook() {
  if [[ -n $1 && -n $2 ]]; then
    echo "$2"
  else
    echo "$1"
  fi
}

case "$1" in
  sentry:set)
    SENTRY_ROOT=$(get_sentry_root "$2")
    WEBHOOK=$(get_webhook "$2" "$3")
    [[ -z $WEBHOOK ]] && echo "Please specify at least a webhook URL" && exit 1
    [[ -z $(is_webhook "$WEBHOOK") ]] && echo "Webhook has to be an URL" && exit 1
    echo "$WEBHOOK" > "$SENTRY_ROOT/SENTRY_URL"
    ;;

  sentry:clear)
    SENTRY_ROOT=$(get_sentry_root "$2")
    rm "$SENTRY_ROOT/SENTRY_URL"
    ;;

  sentry:get)
    SENTRY_ROOT=$(get_sentry_root "$2")
    cat "$SENTRY_ROOT/SENTRY_URL"
    ;;

  help)
    HELP=$(cat<<EOF
    sentry:set [app] <webhook_url>, Set Sentry WebHook URL
    sentry:clear [app], Clears Sentry WebHook URL
    sentry:get [app], Display Sentry WebHook URL
EOF
)
    if [[ -n $DOKKU_API_VERSION ]]; then
      echo "$HELP"
    else
      cat && echo "$HELP"
    fi
    ;;

  *)
    exit $DOKKU_NOT_IMPLEMENTED_EXIT
    ;;
esac
